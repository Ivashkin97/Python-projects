#До сих пор наши программы состояли из функций, т.е. блоков выражений, которые манипулируют данными. 
#Это называется процедурно-ориентированным стилем программирования. Существует и другой способ организации программ: объединять данные и 
#функционал внутри некоего объекта. Это называется объектно-ориентированной парадигмой программирования. В большинстве случаев можно 
#ограничиться процедурным программированием, а при написании большой программы или если решение конкретной задачи того требует, можно 
#переходить к техникам объектно-ориентированного программирования.

#Два основных аспекта объектно-ориентированного программирования - классы и объекты
#Класс создает новый тип, а объекты являются экземплярами класса. Аналогично, когда мы говорим о "переменных типа int", это означает, что
#переменные, которые хранят целочисленные значения, являются экземплярами (объектами) класса int

#Объекты могут хранить данные в обычных переменных, которые принадлежат объекту. Переменные, принадлежащие объекту или классу, называют полями
#Объекты могут также обладать функционалом, т.е. иметь функции, принадлежащие классу. Такие функции принято называть методами класса. Эта терминология 
#важна, так как она помогает нам отличать независимые функции и переменные от тех, что принадлежат классу или объекту. Всё вместе (поля и методы) принято
#называть атрибутами класса. 

#Поля бывают двух типов: они могут принадлежать каждому отдельному экземпляру объекта класса или всему классу. Они называются переменными экземпляра и 
#переменными класса соответственно

#Класс создаётся ключевым словом class. Поля и методы класса записываются в блоке кода с отступом














