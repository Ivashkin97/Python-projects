#Стандартная библиотека Python содержит огромное количество полезных модулей и является частью стандартного комплекта поставки Python. Ознакомиться со 
#стандартной библиотекой Python очень важно, так как множество задач можно решить очень быстро, если вы знакомы с возможностями этих библиотек

#Рассмотрим некоторые наиболее часто используемые модули этой библиотеки. Детальное описание всех модулей стандартной библиотеки Python можно найти в разделе
#"library Reference" документации, входящей в комплект поставки Python. Изучим несколько полезных модулей

#Модуль sys
#Модуль sys содержит функциональность, характерную для системы. Так мы видели, что список sys.argv содержит аргументы командной строки
#Предположим, нам нужно узнать версию используемой команды Python с тем, чтобы, к примеру, убедиться в том, что мы используем как минимум версию 3
#Модуль sys предоставляет такую возможность
#>>>import sys
#>>>sys.version_info
#(3, 0, 0, 'beta', 2)
#>>>sys.version_info[0] >=3
#True
#
#
#import sys, warnings
#if sys.version_info[0] < 3:
#	warnings.warn("Для выполнения этой программы необходима как минимум \
#			версия Python 3.0",
#		RuntimeWarning)
#else:
#	print('Нормальное продолжение')
#
#
#Модуль logging
#Представьте ситуацию, когда необходимо сохранить некоторые отладочные или другие важные сообщения где-нибудь, чтобы иметь возможность позже проверить, 
#отработала ли программа, как ожидалось. Как мы "сохраним где-нибудь" эти сообщения? Сделать это можно при помощи модуля logging 
#import os, platform, logging
#
#if platform.platform().startswith('Windows'):
#	logging_file = os.path.join(os.getenv('HOMEDRIVE'), \
#				    os.getenv('HOMEPATH'), \
#				    'test.log')
#else:
#	logging_file = os.path.join(os.getenv('HOME'), 'test.log')
#
#print("Сохраняем лог в", logging_file)
#
#logging.basicConfig(
#	level=logging.DEBUG,
#	format='%(asctime)s : %(levelname)s : %(message)s',
#	filename = logging_file,
#	filemode = 'w',
#)
#
#logging.debug("Начало программы")
#logging.info("Какие-то действия")
#logging.warning("Программа умирает")